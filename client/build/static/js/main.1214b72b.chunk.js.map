{"version":3,"sources":["actions/authActions.js","actions/types.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/tagReducer.js","reducers/postReducer.js","reducers/index.js","util/isEmpty.js","store.js","components/auth/Login.js","components/admin/Dashboard.js","actions/tagActions.js","components/admin/CreateTagForm.js","components/admin/EditTagForm.js","actions/postActions.js","components/admin/CreatePostForm.js","components/admin/EditPostForm.js","components/layout/Sidebar.js","components/post/PostList.js","components/post/PostPage.js","components/post/TagPage.js","components/test/Hello.js","components/common/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["setCurrentUser","userData","type","payload","initialState","isAuthenticated","user","combineReducers","auth","value","state","arguments","length","undefined","action","Object","objectSpread","keys","trim","errors","tags","tag","data","posts","post","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","f","Login","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","e","setState","defineProperty","target","name","onSubmit","preventDefault","props","loginUser","email","password","history","push","nextProps","react_default","a","createElement","react","className","noValidate","placeholder","autoComplete","Component","connect","dispatch","axios","then","res","token","defaults","headers","common","localStorage","setItem","decoded","jwt_decode","catch","err","response","Dashboard","Link","to","getTags","get","CreateTagForm","createTag","description","tagData","concat","_id","EditTagForm","editTag","match","params","id","loadTagData","_nextProps$tags$tag","htmlFor","tagId","put","location","reload","getPost","postCuid","CreatePostForm","createPost","title","subtitle","content","map","key","PureComponent","postData","cuid","EditPostForm","editPost","_nextProps$posts$post","_this2","for","selected","Sidebar","role","aria-label","slug","PostList","getPosts","layout_Sidebar","dist_default","format","dateAdded","PostPage","slugcuid","split","pop","class","parse","TagPage","getPostsByTagSlug","tagSlug","Hello","hello","process","React","defaultProps","bar","displayName","_ref","component","rest","objectWithoutProperties","Route","assign","Redirect","baseURL","getItem","exp","Date","now","removeItem","href","App","es","BrowserRouter","exact","path","Switch","common_PrivateRoute","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1214b72b.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nimport { GET_ERRORS, CLEAR_ERRORS, SET_CURRENT_USER } from './types';\r\n\r\nexport const loginUser = userData => dispatch => {\r\n    dispatch({\r\n        type: CLEAR_ERRORS\r\n    })\r\n    axios.post('/api/user/login', userData)\r\n    .then(res => {\r\n        const { token } = res.data;\r\n        axios.defaults.headers.common['Authorization'] = token;\r\n        localStorage.setItem('jwtToken', token);\r\n        const decoded = jwt_decode(token);\r\n        dispatch(setCurrentUser(decoded));\r\n\r\n    })\r\n    .catch(err => dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n    }))\r\n}\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    localStorage.removeItem('jwtToken');\r\n    dispatch(setCurrentUser({}))\r\n}\r\n\r\nexport const setCurrentUser = (userData) => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: userData\r\n    }\r\n}","export const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\n\r\nexport const GET_ERRORS = 'GET_ERRORS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n\r\nexport const GET_TAG = 'GET_TAG';\r\nexport const GET_TAGS = 'GET_TAGS';\r\nexport const ADD_TAG = 'ADD_TAG';\r\nexport const DELETE_TAG = 'DELETE_TAG';\r\n\r\nexport const GET_POST = 'GET_POST';\r\nexport const GET_POSTS = 'GET_POSTS';\r\nexport const ADD_POST = 'ADD_POST';\r\nexport const DELETE_POST = 'DELETE_POST';","import { SET_CURRENT_USER } from '../actions/types';\r\nimport isEmpty from '../util/isEmpty';\r\n\r\nconst initialState = {\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: !isEmpty(action.payload),\r\n                user: action.payload\r\n            }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = {}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload;\r\n        case CLEAR_ERRORS: \r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_TAGS, GET_TAG } from '../actions/types';\r\n\r\nconst initialState = {}\r\n\r\nexport default function (state=initialState, action) {\r\n    switch(action.type) {\r\n        case GET_TAG:\r\n            return {\r\n                ...state,\r\n                tag: action.payload\r\n            }\r\n        case GET_TAGS: \r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { GET_POSTS, GET_POST } from '../actions/types';\r\n\r\nconst initialState = {}\r\n\r\nexport default function (state=initialState, action) {\r\n    switch (action.type) {\r\n        case GET_POSTS:\r\n            return {\r\n                ...state,\r\n                data: action.payload\r\n            }\r\n        case GET_POST:\r\n            return {\r\n                ...state,\r\n                post: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport tagReducer from './tagReducer';\r\nimport postReducer from './postReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    errors: errorReducer,\r\n    tags: tagReducer,\r\n    posts: postReducer\r\n})","export default function isEmpty (value) {\r\n    return (\r\n        value === undefined ||\r\n        value === null ||\r\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\r\n        (typeof value === 'string' && value.trim().length === 0)\r\n    )\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n    )\r\n);\r\n\r\nexport default store;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './Login.css';\r\nimport { loginUser } from '../../actions/authActions';\r\n\r\nclass Login extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\temail: '',\r\n\t\t\tpassword: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (this.props.auth.isAuthenticated) {\r\n\t\t\tthis.props.history.push('/dashboard');\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentWillReceiveProps(nextProps) {\r\n\t\tif (nextProps.auth.isAuthenticated) {\r\n\t\t\tthis.props.history.push('/dashboard');\r\n\t\t}\r\n\t}\r\n\r\n\tonChange = (e) => {\r\n\t\tthis.setState({[e.target.name] : e.target.value})\r\n\t}\r\n\tonSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\t\r\n\t\tthis.props.loginUser(this.state);\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<h1 className=\"text-center\">Login</h1>\r\n\t\t\t\t<form onSubmit={this.onSubmit} noValidate>\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"email\" \r\n\t\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\t\tplaceholder=\"Your Email\" \r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\tclassName={this.props.errors.email ? 'is-invalid' : ''}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{ this.props.errors.email && \r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.email}</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\ttype=\"password\" \r\n\t\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\t\tplaceholder=\"Password\" \r\n\t\t\t\t\t\tautoComplete=\"on\"\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\tclassName={this.props.errors.password ? 'is-invalid' : ''}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{ this.props.errors.password &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.password}</span>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<input type=\"submit\" value=\"Login\"/>\r\n\t\t\t\t</form>\r\n\t\t\t</Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n\tauth: state.auth,\r\n\terrors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginUser})(Login)\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Dashboard.css';\r\n\r\nconst Dashboard = () => (\r\n    <div>\r\n        <h1 className=\"text-center\">Dashboard</h1>\r\n        <div className=\"text-center\">\r\n            <Link to=\"/\" className=\"btn bg-gray\">Blog Page</Link>\r\n            <Link to=\"/create-post\" className=\"btn bg-green\">Create Post</Link>\r\n            <Link to=\"/create-tag\" className=\"btn bg-green\">Create Tag</Link>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default Dashboard;","import axios from 'axios';\r\n\r\nimport { GET_TAG, GET_TAGS, GET_ERRORS } from './types';\r\n\r\nexport const getTags = () => dispatch => {\r\n    axios.get('/api/tag/all')\r\n        .then(res => dispatch({\r\n            type: GET_TAGS,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        }))\r\n}\r\n\r\nexport const createTag = (tagData, history) => dispatch => {\r\n    axios.post('/api/tag', tagData)\r\n        .then(res => history.push(`/edit-tag/id/${res.data._id}`))\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        }))\r\n}\r\n\r\nexport const loadTagData = (tagId) => dispatch => {\r\n    axios.get(`/api/tag/id/${tagId}`)\r\n        .then(res => dispatch({\r\n            type: GET_TAG,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        }))\r\n}\r\n\r\nexport const editTag = (tagId, tagData) => dispatch => {\r\n    axios.put(`/api/tag/id/${tagId}`, tagData)\r\n        .then(res => window.location.reload())\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        }))\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { createTag } from '../../actions/tagActions';\r\n\r\nclass CreateTagForm extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            name: '',\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name] : e.target.value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.createTag(this.state, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center\">Create Tag</h1>\r\n                <form onSubmit={this.onSubmit} noValidate>\r\n                    <input \r\n                        type='text' \r\n                        name='name' \r\n                        className={this.props.errors.name ? 'is-invalid' : ''}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    { this.props.errors.name &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.name}</span>\r\n\t\t\t\t\t}\r\n                    <input \r\n                        type='text' \r\n                        name='description' \r\n                        className={this.props.errors.description ? 'is-invalid' : ''}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    { this.props.errors.description &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.description}</span>\r\n\t\t\t\t\t}\r\n                    <input \r\n                        type='submit' \r\n                        name='Create' \r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nconst mapStateToProps = (state) => ({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, { createTag })(CreateTagForm);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { loadTagData, editTag } from '../../actions/tagActions';\r\n\r\nclass EditTagForm extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            name: '',\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadTagData(this.props.match.params.id);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.tags.tag) {\r\n            const { name, description } = nextProps.tags.tag;\r\n            this.setState({\r\n                name: name,\r\n                description: description\r\n            })\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({[e.target.name] : e.target.value})\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.editTag(this.props.match.params.id, this.state);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.tags.tag) {\r\n            return (\r\n                <h1>No Tag Found</h1>\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center\">Edit tag</h1>\r\n                <form onSubmit={this.onSubmit} noValidate>\r\n                    <label htmlFor='name'>Name</label>\r\n                    <input \r\n                        type='text' \r\n                        name='name' \r\n                        id='name'\r\n                        value={this.state.name}\r\n                        className={this.props.errors.name ? 'is-invalid' : ''}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    { this.props.errors.name &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.name}</span>\r\n                    }\r\n                    <label htmlFor='description'>Description</label>\r\n                    <input \r\n                        type='text' \r\n                        name='description' \r\n                        id='description'\r\n                        value={this.state.description}\r\n                        className={this.props.errors.description ? 'is-invalid' : ''}\r\n                        onChange={this.onChange}\r\n                    />\r\n                    { this.props.errors.description &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.description}</span>\r\n\t\t\t\t\t}\r\n                    <input \r\n                        type='submit' \r\n                        name='Update' \r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n} \r\n\r\nconst mapStateToProps = (state) => ({\r\n    errors: state.errors,\r\n    tags: state.tags\r\n})\r\n\r\nexport default connect(mapStateToProps, { editTag, loadTagData })(EditTagForm);","import axios from 'axios';\r\n\r\nimport { GET_POSTS, GET_ERRORS, GET_POST } from './types';\r\n\r\nexport const getPosts = () => dispatch => {\r\n    axios.get('/api/post/all')\r\n        .then(res => {\r\n            dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        })\r\n        }   \r\n        )\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        }))\r\n}\r\n\r\nexport const getPost = (postCuid) => dispatch => {\r\n    axios.get(`/api/post/cuid/${postCuid}`)\r\n        .then(res => dispatch({\r\n            type: GET_POST,\r\n            payload: res.data\r\n        }))\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        }))\r\n}\r\n\r\nexport const getPostsByTagSlug = (tagSlug) => dispatch => {\r\n    axios.get(`/api/post/tag/slug/${tagSlug}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: GET_POSTS,\r\n            payload: res.data\r\n        })\r\n    }   \r\n    )\r\n    .catch(err => dispatch({\r\n        type: GET_ERRORS,\r\n        payload: err.response.data\r\n    }))\r\n}\r\n\r\nexport const createPost = (postData, history) => dispatch => {\r\n    axios.post('/api/post', postData)\r\n        .then(res => history.push(`/edit-post/cuid/${res.data.cuid}`))\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        }))\r\n}\r\n\r\nexport const editPost = (postCuid, postData) => dispatch => {\r\n    axios.put(`/api/post/cuid/${postCuid}`, postData)\r\n        .then(res => window.location.reload())\r\n        .catch(err => dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n        }))\r\n}","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTags } from '../../actions/tagActions';\r\nimport { createPost } from '../../actions/postActions';\r\n\r\nimport './CreatePostForm.css';\r\n\r\nclass CreatePostForm extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        this.props.getTags();\r\n    }\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            title: '',\r\n            subtitle: '',\r\n            content: '',\r\n            tag: ''\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name] : e.target.value })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.createPost(this.state, this.props.history);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center\">Create Post</h1>\r\n                <form onSubmit={this.onSubmit} noValidate>\r\n                    <input \r\n                        name=\"title\"\r\n                        onChange={this.onChange}\r\n                        className={this.props.errors.title ? 'is-invalid' : ''}\r\n                        placeholder=\"Title\"\r\n                    />\r\n                    { this.props.errors.title &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.title}</span>\r\n\t\t\t\t\t}\r\n                    <input \r\n                        name=\"subtitle\"\r\n                        onChange={this.onChange}\r\n                        className={this.props.errors.subtitle ? 'is-invalid' : ''}\r\n                        placeholder=\"Subtitle\"\r\n                    />\r\n                    { this.props.errors.subtitle &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.subtitle}</span>\r\n\t\t\t\t\t}\r\n                    <textarea \r\n                        name=\"content\"\r\n                        onChange={this.onChange}\r\n                        className={this.props.errors.content ? 'is-invalid' : ''}\r\n                        placeholder=\"Content\"\r\n                    />\r\n                    { this.props.errors.content &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.content}</span>\r\n\t\t\t\t\t}\r\n                    <select \r\n                        name=\"tag\"\r\n                        onChange={this.onChange}\r\n                        className={this.props.errors.tag ? 'is-invalid' : ''}\r\n                    >\r\n                        <option value=\"\">--Select Tag--</option>\r\n                        {this.props.tags.data && this.props.tags.data.map(tag => (\r\n                            <option value={tag._id} key={tag._id}>{tag.name}</option>\r\n                        ))}\r\n                    </select>\r\n                    { this.props.errors.tag &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.tag}</span>\r\n\t\t\t\t\t}\r\n                    <input \r\n                        type=\"submit\"\r\n                        value=\"Publish\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    tags: state.tags\r\n})    \r\n\r\nexport default connect(mapStateToProps, {getTags, createPost})(CreatePostForm);","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getTags } from '../../actions/tagActions';\r\nimport { editPost, getPost } from '../../actions/postActions';\r\n\r\nclass EditPostForm extends PureComponent {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            title: '',\r\n            subtitle: '',\r\n            content: '',\r\n            tag: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getPost(this.props.match.params.cuid);\r\n        this.props.getTags();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.posts.post) {\r\n            const { title, subtitle, content} = nextProps.posts.post;\r\n            const tag = nextProps.posts.post.tag._id;\r\n            this.setState({ title, subtitle, content, tag });\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name] : e.target.value })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.editPost(this.props.match.params.cuid, this.state);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-center\">Edit Post</h1>\r\n                <form onSubmit={this.onSubmit} noValidate>\r\n                    <label for=\"title\">Title</label>\r\n                    <input \r\n                        name=\"title\"\r\n                        id=\"title\"\r\n                        onChange={this.onChange}\r\n                        className={this.props.errors.title ? 'is-invalid' : ''}\r\n                        value={this.state.title}\r\n                    />\r\n                    { this.props.errors.title &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.title}</span>\r\n                    }\r\n                    <label for=\"subtitle\">Subtitle</label>\r\n                    <input \r\n                        name=\"subtitle\"\r\n                        id=\"subtitle\"\r\n                        onChange={this.onChange}\r\n                        className={this.props.errors.subtitle ? 'is-invalid' : ''}\r\n                        value={this.state.subtitle}\r\n                    />\r\n                    { this.props.errors.subtitle &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.subtitle}</span>\r\n                    }\r\n                    <label for=\"content\">Content</label>\r\n                    <textarea \r\n                        name=\"content\"\r\n                        id=\"content\"\r\n                        onChange={this.onChange}\r\n                        className={this.props.errors.content ? 'is-invalid' : ''}\r\n                        value={this.state.content}\r\n                    />\r\n                    { this.props.errors.content &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.content}</span>\r\n                    }\r\n                    <label for=\"tag\">Tag</label>\r\n                    <select \r\n                        name=\"tag\"\r\n                        id=\"tag\"\r\n                        onChange={this.onChange}\r\n                        className={this.props.errors.tag ? 'is-invalid' : ''}\r\n                    >\r\n                        <option value=\"\">--Select Tag--</option>\r\n                        {this.props.tags.data && this.props.tags.data.map(tag => this.state.tag === tag._id ?\r\n                            (<option value={tag._id} key={tag._id} selected>{tag.name}</option>)\r\n                        :   \r\n                            (<option value={tag._id} key={tag._id}>{tag.name}</option>)\r\n                        )}\r\n                    </select>\r\n                    { this.props.errors.tag &&\r\n\t\t\t\t\t<span className=\"invalid-feedback\">{this.props.errors.tag}</span>\r\n\t\t\t\t\t}\r\n                    <input \r\n                        type=\"submit\"\r\n                        value=\"Update\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    errors: state.errors,\r\n    tags: state.tags,\r\n    posts: state.posts\r\n})    \r\n\r\nexport default connect(mapStateToProps, {getTags, editPost, getPost})(EditPostForm);","import React, { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getTags } from '../../actions/tagActions';\r\n\r\nclass Sidebar extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        this.props.getTags();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <aside>\r\n                <p><Link to='/'><span role=\"img\" aria-label=\"home\">🏡</span> Home</Link></p>\r\n                <p>Hi <span role=\"img\" aria-label=\"wave\">👋🏼</span> I'm Jed, a web developer.<br/>\r\n                I create this blog just for learning ReactJS and NodeJS.</p>\r\n                <p>Source: <Link to=\"https://flaviocopes.com/\">Flaviocopes.com</Link></p>\r\n                <p><button><span role=\"img\" aria-label=\"moon\">🌓</span> Light|dark mode</button></p>\r\n                <h4>My Recommended Courses</h4>\r\n                <ul>\r\n                    <li>Course 1</li>\r\n                    <li>Course 2</li>\r\n                    <li>Course 3</li>\r\n                    <li>Course 4</li>\r\n                </ul>\r\n                {this.props.tags.data && (\r\n                    <div className=\"tags-cloud\">\r\n                        {this.props.tags.data.map(tag => \r\n                            <Link key={tag._id} to={`/tag/${tag.slug}`} className={`bg-${tag.slug}`}>{tag.name}</Link>    \r\n                        )}\r\n                    </div>\r\n                )}\r\n            </aside>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    tags: state.tags\r\n})\r\n\r\nexport default connect(mapStateToProps, {getTags})(Sidebar);\r\n","import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { getPosts } from '../../actions/postActions';\r\n\r\nimport Sidebar from '../layout/Sidebar';\r\n\r\nimport './PostList.css';\r\n\r\nclass PostList extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        this.props.getPosts();\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"container\">\r\n                <Sidebar />\r\n                <article className=\"post-container\">\r\n                    <ul className=\"post-list\">\r\n                        {this.props.posts.data && this.props.posts.data.map(post => (\r\n                            <li key={post.cuid} className=\"post-item\">\r\n                                <Link to={`/post/${post.slug}-${post.cuid}`}>\r\n                                    <h3 className=\"title\">{post.title}</h3>\r\n                                    <p className=\"subtitle\">{post.subtitle}</p>\r\n                                </Link>\r\n                                <div className=\"date-tag\">\r\n                                    <Moment format=\"MMM DD YYYY\">{post.dateAdded}</Moment>\r\n                                    <div className=\"tag\">\r\n                                        <Link className={`button-tag bg-${post.tag.slug}`} to={`/tag/${post.tag.slug}`}>{post.tag.name}</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPosts})(PostList);","import React, { PureComponent } from 'react';\r\nimport Moment from 'react-moment';\r\nimport parse from 'html-react-parser';\r\nimport { connect } from 'react-redux';\r\nimport { getPost } from '../../actions/postActions';\r\n\r\nimport Sidebar from '../layout/Sidebar';\r\n\r\nclass PostPage extends PureComponent {\r\n    \r\n    componentDidMount() {\r\n        const postCuid = this.props.match.params.slugcuid.split('-').pop();\r\n        this.props.getPost(postCuid);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"container\">\r\n                <Sidebar />\r\n                {this.props.posts.post && (\r\n                    <article className=\"post-container\">\r\n                        <h1>{this.props.posts.post.title}</h1>\r\n                        <p>{this.props.posts.post.subtitle}</p>\r\n                        <p className=\"single-post-date\">Published <Moment format=\"MMM DD YYYY\">{this.props.posts.post.dateAdded}</Moment></p>\r\n                        <div className=\"single-post-content\">\r\n                            {parse(this.props.posts.post.content)}\r\n                        </div>\r\n                    </article>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPost})(PostPage);","import React, { PureComponent } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport { getPostsByTagSlug } from '../../actions/postActions';\r\n\r\nimport Sidebar from '../layout/Sidebar';\r\n\r\nimport './PostList.css';\r\n\r\nclass TagPage extends PureComponent {\r\n    \r\n    componentDidMount() {\r\n        this.props.getPostsByTagSlug(this.props.match.params.tag);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.match.params.tag !== this.props.match.params.tag) {\r\n            this.props.getPostsByTagSlug(nextProps.match.params.tag);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Sidebar />\r\n                <article className=\"post-container\">\r\n                    <ul className=\"post-list\">\r\n                        {this.props.posts.data && this.props.posts.data.map(post => (\r\n                            <li key={post.cuid} className=\"post-item\">\r\n                                <Link to={`/post/${post.slug}-${post.cuid}`}>\r\n                                    <h3 className=\"title\">{post.title}</h3>\r\n                                    <p className=\"subtitle\">{post.subtitle}</p>\r\n                                </Link>\r\n                                <div className=\"date-tag\">\r\n                                    <Moment format=\"MMM DD YYYY\">{post.dateAdded}</Moment>\r\n                                    <div className=\"tag\">\r\n                                        <Link to={`/tag/${post.tag.slug}`} className={`button-tag bg-${post.tag.slug}`}>{post.tag.name}</Link>\r\n                                    </div>\r\n                                </div>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </article>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts\r\n})\r\n\r\nexport default connect(mapStateToProps, {getPostsByTagSlug})(TagPage)","import React from 'react';\r\n\r\nclass Hello extends React.Component {\r\n    static defaultProps = {\r\n        name: 'World',\r\n        bar: 'Bar'\r\n    }\r\n    static displayName = 'Foo';\r\n    // static propTypes = { bar: PropTypes.string };\r\n\r\n    state = { hello: 'Hello'}\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state.hello} + {this.props.name} + {process.env.NODE_ENV}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Hello;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nconst PrivateRoute = ({component: Component, auth, ...rest}) => (\r\n    auth.isAuthenticated ? (\r\n        <Route {...rest} component={Component} />\r\n    ) : (\r\n        <Redirect to='/login' />\r\n    )\r\n  )\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport {setCurrentUser, logoutUser} from './actions/authActions';\n\nimport store from './store';\n\nimport Login from './components/auth/Login';\nimport Dashboard from './components/admin/Dashboard';\nimport CreateTagForm from './components/admin/CreateTagForm';\nimport EditTagForm from './components/admin/EditTagForm';\nimport CreatePostForm from './components/admin/CreatePostForm';\nimport EditPostForm from './components/admin/EditPostForm';\nimport PostList from './components/post/PostList';\nimport PostPage from './components/post/PostPage';\nimport TagPage from './components/post/TagPage';\nimport Hello from './components/test/Hello';\n\nimport PrivateRoute from './components/common/PrivateRoute';\n\nimport './App.css';\n\n// axios default config\nif (process.env.NODE_ENV === 'production') {\n  axios.defaults.baseURL = 'https://flaviocopes-clone.herokuapp.com/';\n}\nelse {\n  axios.defaults.baseURL = 'http://localhost:5000';\n}\n\n\n// check for token\nif (localStorage.getItem('jwtToken')) {\n  const token = localStorage.getItem('jwtToken');\n  axios.defaults.headers.common['Authorization'] = token;\n  const decoded = jwt_decode(token);\n  store.dispatch(setCurrentUser(decoded))\n  // console.log(decoded);\n\n  if (decoded.exp < Date.now() / 1000) {\n    store.dispatch(logoutUser())\n    window.location.href = '/';\n  }\n}\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={ store }>\n        <Router>\n          <div className=\"App\">\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/\" component={PostList} />\n              <Route exact path=\"/post/:slugcuid\" component={PostPage} />\n              <Route exact path=\"/tag/:tag\" component={TagPage} />\n              <Route exact path=\"/hello\" component={Hello} />\n              <Switch>\n                <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n              </Switch>\n              <Switch>\n                <PrivateRoute exact path=\"/create-tag\" component={CreateTagForm} />\n              </Switch>\n              <Switch>\n                <PrivateRoute exact path=\"/edit-tag/id/:id\" component={EditTagForm} />\n              </Switch>\n              <Switch>\n                <PrivateRoute exact path=\"/create-post\" component={CreatePostForm} />\n              </Switch>\n              <Switch>\n                <PrivateRoute exact path=\"/edit-post/cuid/:cuid\" component={EditPostForm} />\n              </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}